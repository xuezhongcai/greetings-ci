# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main"]
  workflow_dispatch:
    inputs:
      myVersion:
        description: 'Input Version'
      myValues:
        description: 'Input Values'

jobs:
  build:

    runs-on: ubuntu-latest

    # Map a step output to a job output
    outputs:
      artifact-tag: ${{ steps.changelog.outputs.version }}
 
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Conventional Changelog Action
      id: changelog
      uses: TriPSs/conventional-changelog-action@v5.1.0
      with:
        skip-git-pull: "true"
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Tag artifact 
      run: mv build/libs/greetings-ci.jar build/libs/greetings-ci-${{github.event.inputs.myVersion || steps.changelog.outputs.version }}.jar

    - name: Upload Artifact
      uses: actions/upload-artifact@v4.3.0
      with:
        name: greetings-jar
        path: |
          build/libs
          test-script.sh
  test-run:

    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
 
    - name: run-test
      uses: ./.github/actions/test-action
      with:
        artifact-version: ${{ github.event.inputs.myVersion || needs.build.outputs.artifact-tag }}
        arguments-to-print: ${{ github.event.inputs.myValues }}
        
  create-issue-on-failure:

    needs: test-run

    permissions:
      issues: write

    if: always() && failure() 
    uses: ./.github/workflows/create-failure-issue.yml 
    with:
      title: "Automated workflow failure issue for commit ${{ github.sha }}"
      body: "This issue was automatically created by the GitHub Action workflow ** ${{ github.workflow }} **"  

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build
